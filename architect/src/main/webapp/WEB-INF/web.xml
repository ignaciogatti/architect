<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>Architect</display-name>
	
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>Index.jsp</welcome-file>
	</welcome-file-list>
	
	<listener>
    	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>org.apache.activemq.web.SessionListener</listener-class>
	</listener>
	
	<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
        	/WEB-INF/applicationContext-security.xml
        	/WEB-INF/spring-servlet.xml
        </param-value>
  	</context-param>

	<context-param>
		<param-name>org.apache.activemq.brokerURL</param-name>
		<param-value>vm://localhost</param-value>
	</context-param>

	<context-param>
		<param-name>org.apache.activemq.embeddedBroker</param-name>
		<param-value>true</param-value>
	</context-param>
	
	<filter>
        <filter-name>hibernateFilter</filter-name>
        <filter-class>architect.interceptor.FlushOpenSessionInViewFilter</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>sessionFactory</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>session</filter-name>
		<filter-class>org.apache.activemq.web.SessionFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
		<filter-name>session</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>AjaxServlet</servlet-name>
		<servlet-class>org.apache.activemq.web.AjaxServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>AjaxServlet</servlet-name>
		<url-pattern>/amq/*</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>MessageServlet</servlet-name>
		<servlet-class>org.apache.activemq.web.MessageServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<!-- Uncomment this parameter if you plan to use multiple consumers over REST  
 		<init-param> 
 			<param-name>destinationOptions</param-name>
 			<param-value>consumer.prefetchSize=1</param-value>
 		</init-param>  -->
 		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
        <servlet-name>MessageServlet</servlet-name>
        <url-pattern>/message/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>QueueBrowseServlet</servlet-name>
        <servlet-class>org.apache.activemq.web.QueueBrowseServlet</servlet-class>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>QueueBrowseServlet</servlet-name>
        <url-pattern>/queueBrowse/*</url-pattern>
    </servlet-mapping>

	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
        	<param-name>contextConfigLocation</param-name>
        	<param-value></param-value>
    	</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.jpg</url-pattern>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.xml</url-pattern>
		<url-pattern>*.properties</url-pattern>
	</servlet-mapping>
</web-app>
